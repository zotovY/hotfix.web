{"version":3,"sources":["panels/Home.js","panels/Place.js","panels/Checkbox.js","panels/Basket.js","panels/Order.js","panels/Orders.js","App.js","index.js","img/edit.svg","img/1.png","img/3.png","img/2.png","img/4.png","img/check-symbol.svg","img/refresh-button.svg","img/kfc.png","img/burger.png","img/mcdac.png","img/sub.png"],"names":["Home","foodAreas","order","Fragment","className","map","area","key","id","to","name","alt","src","edit","items","item","link","image","description","Object","keys","length","defaultProps","Place","onIncrementPosition","onDecrementPosition","price","useMemo","foodIds","Set","foods","result","values","filter","value","has","reduce","count","parseInt","accounting","formatNumber","food","composition","onClick","itemId","areaId","Checkbox","checked","onToggle","onChange","type","Check","withRouter","match","params","faster","setFaster","time","setTime","useState","selfService","setSelfService","products","onFocus","event","target","onBlur","Order","history","setActiveOrder","setTimeout","push","Orders","orderStatuses","setFinishedOrder","activeOrders","activeOrdersList","shopId","activeOrdersSet","forEach","data","placeId","placeName","shopName","finishedOrders","refresh","FOOD_AREAS","kfc","FourTowar","OneTowar","burger","TwoTowar","ThreeTowar","mcdac","sub","placesMap","foodsMap","App","JSON","parse","localStorage","getItem","setOrderStatuses","setOrder","path","exact","nextStatuses","setItem","stringify","render","routeProps","location","pathname","updatedOrder","console","log","nextOrderStatuses","status","serialized","connect","send","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.319dd8b5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport edit from '../img/edit.svg';\nimport './Home.css';\n\nconst Home = ({ foodAreas, order }) => (\n  <React.Fragment>\n    <ul className=\"Home\">\n      {foodAreas.map((area) => (\n        <li\n          key={area.id}\n        >\n          <div className=\"Home__fixed-content\">\n            <header className=\"Home__header\">\n              <h1 className=\"Home__head\">\n                <Link to=\"/\" className=\"Home__logo\">\n                  {area.name}\n                </Link>\n              </h1>\n              <Link to=\"/\" className=\"Home__change-tz\">\n                <img\n                  className=\"Home__edit\"\n                  alt=\"change-profile\"\n                  src={edit}\n                />\n              </Link>\n            </header>\n            <ul className=\"Home__tabs\">\n              <li className=\"Home__tab Home__tab_active\">\n                Еда\n              </li>\n              {/* <li className=\"Home__tab Home__tab_disabled\">\n                Развлечения\n              </li>\n              <li className=\"Home__tab Home__tab_disabled\">\n                Здоровье\n              </li> */}\n            </ul>\n          </div>\n          <ul className=\"Home__items\">\n            {area.items.map(item => (\n              <li\n                className=\"Home__item\"\n                key={item.id}\n              >\n                <Link\n                  className=\"Home__food-link\"\n                  to={item.link}\n                >\n                  <img\n                    alt={item.name}\n                    className=\"Home__image\"\n                    src={item.image}\n                  />\n                  <h3 className=\"Home__food-name\">\n                    {item.name}\n                  </h3>\n                  <p className=\"Home__food-type\">{item.description}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n    {Object.keys(order).length !== 0 && (\n      <footer className=\"Footer\">\n        <Link to=\"/orders\" className=\"Footer__orders\">\n\t\t\t\t\tМои заказы\n        </Link>\n      </footer>\n    )}\n  </React.Fragment>\n);\n\nHome.propTypes = {\n  foodAreas: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n    })),\n  })),\n};\n\nHome.defaultProps = {\n  foodAreas: [],\n};\n\nexport default Home;\n","import React, { useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport accounting from \"accounting\";\n// import PropTypes from 'prop-types';\n\nimport edit from \"../img/edit.svg\";\nimport \"./place.css\";\n\nconst Place = ({\n    item,\n    order,\n    onIncrementPosition,\n    onDecrementPosition,\n    area,\n}) => {\n    const price = useMemo(() => {\n        const foodIds = new Set((item.foods || []).map((item) => item.id));\n\n        const result = Object.values(order)\n            .filter((value) => {\n                const {\n                    item: { id },\n                } = value;\n\n                return foodIds.has(id);\n            })\n            .reduce((result, value) => {\n                const {\n                    count,\n                    item: { price },\n                } = value;\n\n                return result + parseInt(price) * parseInt(count);\n            }, 0);\n\n        return accounting.formatNumber(result, 0, \" \");\n    }, [order, item]);\n\n    return (\n        <div className=\"Place\">\n            <header className=\"Place__header\">\n                <aside className=\"Place__trz\">\n                    <h1 className=\"Place__head\">\n                        <Link to=\"/\" className=\"Place__logo\">\n                            {area.name}\n                        </Link>\n                    </h1>\n                    <Link to=\"/edit\" className=\"Place__change-tz\">\n                        <img alt=\"change-profile\" src={edit} />\n                    </Link>\n                </aside>\n            </header>\n            <aside className=\"Place__restoraunt\">\n                <img\n                    className=\"Place__restoraunt-logo\"\n                    alt=\"Fastfood logo\"\n                    src={item.image}\n                />\n                <h2 className=\"Place__restoraunt-name\">{item.name}</h2>\n                <p className=\"Place__restoraunt-type\">{item.description}</p>\n            </aside>\n            <ul className=\"Place__foods\">\n                {item.foods.map((food) => (\n                    <li className=\"Place__food\" key={food.id}>\n                        <div className=\"Place__food-logo-wrapper\">\n                            <img\n                                alt=\"food logo\"\n                                className=\"Place__food-logo\"\n                                src={food.image}\n                            />\n                        </div>\n                        <h3 className=\"Place__food-name\">{food.name}</h3>\n                        <p className=\"Place__food-composition\">\n                            {food.composition}\n                        </p>\n                        <div className=\"Place__food-price\">\n                            <span className=\".Place__food-price-price\">\n                                Цена: {food.price}&nbsp;&nbsp;\n                            </span>\n                            <button\n                                className=\"Place__food-button\"\n                                onClick={() => {\n                                    onDecrementPosition({\n                                        id: food.id,\n                                        itemId: item.id,\n                                        areaId: area.id,\n                                    });\n                                }}\n                            >\n                                -\n                            </button>\n                            <span>\n                                &nbsp;\n                                {food.id in order ? order[food.id].count : 0}\n                                &nbsp;\n                            </span>\n                            <button\n                                className=\"Place__food-button\"\n                                onClick={() => {\n                                    onIncrementPosition({\n                                        id: food.id,\n                                        itemId: item.id,\n                                        areaId: area.id,\n                                    });\n                                }}\n                            >\n                                +\n                            </button>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n            <footer className=\"Place__footer\">\n                <Link\n                    to={`/basket/${area.id}/${item.id}`}\n                    className={`Place__order ${price === \"0\" ? \"disable\" : \"\"}`}\n                >\n                    Оформить заказ ({price})\n                </Link>\n            </footer>\n        </div>\n    );\n};\n\nPlace.defaultProps = {\n    item: {},\n    onIncrementPosition: () => {},\n    onDecrementPosition: () => {},\n};\n\nexport default Place;\n","import React from 'react';\n\nimport './Checkbox.css';\nimport Check from '../img/check-symbol.svg';\n\n\nconst Checkbox = ({ checked, onToggle }) => {\n  return (\n    <div className=\"Checkbox\">\n      <input\n        checked={checked}\n        onChange={onToggle}\n        type=\"checkbox\"\n      />\n      <img\n        alt=\"custom checkbox logo\"\n        src={Check}\n      />\n    </div>\n  );\n};\n\nCheckbox.defaultProps = {\n  onToggle: () => {},\n};\n\nexport default Checkbox;\n","import React, { useMemo, useState } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport accounting from \"accounting\";\n\nimport Checkbox from \"./Checkbox\";\n\nimport edit from \"../img/edit.svg\";\nimport \"./place.css\";\n\nconst Basket = ({\n    match: {\n        params: { areaId, itemId },\n    },\n    foodAreas,\n    order,\n    faster,\n    setFaster,\n    time,\n    setTime,\n}) => {\n    const [selfService, setSelfService] = useState(false);\n    const area = foodAreas.filter((area) => area.id === areaId)[0];\n    const item = area.items.filter((item) => item.id === itemId)[0];\n\n    const [price, products] = useMemo(() => {\n        const foodIds = new Set((item.foods || []).map((item) => item.id));\n\n        const products = Object.values(order).filter((value) => {\n            const {\n                item: { id },\n            } = value;\n\n            return foodIds.has(id);\n        });\n\n        const result = products.reduce((result, value) => {\n            const { count, item } = value;\n\n            return result + parseInt(item.price) * parseInt(count);\n        }, 0);\n\n        return [accounting.formatNumber(result, 0, \" \"), products];\n    }, [order, item]);\n\n    return (\n        <div className=\"Place\">\n            <header className=\"Place__header\">\n                <aside className=\"Place__trz\">\n                    <h1 className=\"Place__head\">\n                        <Link to=\"/\" className=\"Place__logo\">\n                            {area.name}\n                        </Link>\n                    </h1>\n                    <Link to=\"/edit\" className=\"Place__change-tz\">\n                        <img alt=\"change-profile\" src={edit} />\n                    </Link>\n                </aside>\n            </header>\n            <aside className=\"Place__restoraunt\">\n                <img\n                    className=\"Place__restoraunt-logo\"\n                    alt=\"Fastfood logo\"\n                    src={item.image}\n                />\n                <h2 className=\"Place__restoraunt-name\">{item.name}</h2>\n                <p className=\"Place__restoraunt-type\">{item.description}</p>\n            </aside>\n            <div className=\"Place__products-wrapper\">\n                <ul className=\"Place__products\">\n                    {products.map(({ item, count }) => (\n                        <li className=\"Place__product\" key={item.id}>\n                            <img\n                                className=\"Place__product-logo\"\n                                alt=\"Ordered product logo\"\n                                src={item.image}\n                            />\n                            <h3 className=\"Place__product-name\">{item.name}</h3>\n                            <p className=\"Place__product-price\">\n                                Цена: {item.price}\n                            </p>\n                            <p className=\"Place__product-count\">x{count}</p>\n                        </li>\n                    ))}\n                </ul>\n                <Link\n                    className=\"Place__change-product\"\n                    to={`/place/${areaId}/${itemId}`}\n                >\n                    Изменить\n                </Link>\n            </div>\n            <div className=\"Place__choice\">\n                <h3>Время:</h3>\n                <div className=\"Place__choice-item\">\n                    <span>Как можно быстрее</span>\n                    <Checkbox\n                        checked={faster}\n                        onToggle={() => {\n                            if (faster) {\n                                setFaster(false);\n                            } else {\n                                setTime(\"\");\n                                setFaster(true);\n                            }\n                        }}\n                    />\n                </div>\n                <div className=\"Place__choice-item\">\n                    <span>Назначить</span>\n                    <input\n                        type=\"time\"\n                        value={time}\n                        onFocus={() => {\n                            setFaster(false);\n                        }}\n                        onChange={(event) => {\n                            setFaster(false);\n                            setTime(event.target.value);\n                        }}\n                        onBlur={() => {\n                            setFaster(!time);\n                        }}\n                    />\n                </div>\n                <div className=\"Place__choice-item\">\n                    <h3>С собой</h3>\n                    <Checkbox\n                        checked={selfService}\n                        onToggle={() => setSelfService(!selfService)}\n                    />\n                </div>\n                <div className=\"Place__choice-item\">\n                    <h3>На месте</h3>\n                    <Checkbox\n                        checked={!selfService}\n                        onToggle={() => setSelfService(!setSelfService)}\n                    />\n                </div>\n            </div>\n            <footer className=\"Place__footer\">\n                <Link\n                    onClick={() => {\n                        setFaster(true);\n                        setTime();\n                    }}\n                    to={`/order/${area.id}/${item.id}`}\n                    className={`Place__order ${\n                        !time && !faster ? \"disable\" : \"\"\n                    }`}\n                >\n                    Оплатить {price}\n                </Link>\n            </footer>\n        </div>\n    );\n};\n\nexport default withRouter(Basket);\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\n\n\nconst Order = ({ match: { params: { areaId, itemId }}, history, foodAreas, setActiveOrder }) => {\n  const area = foodAreas.filter(area => area.id === areaId)[0];\n  const item = area.items.filter(item => item.id === itemId)[0];\n\n  return (\n    <div className=\"Place Place_order\">\n      <header className=\"Place__header\">\n        <aside className=\"Place__trz\">\n          <h1 className=\"Place__head\">\n            <Link to=\"/\" className=\"Place__logo\">\n              {area.name}\n            </Link>\n          </h1>\n          <Link to=\"/edit\" className=\"Place__change-tz\">\n            <img\n              alt=\"change-profile\"\n              src={edit}\n            />\n          </Link>\n        </aside>\n      </header>\n      <aside className=\"Place__restoraunt\">\n        <img\n          className=\"Place__restoraunt-logo\"\n          alt=\"Fastfood logo\"\n          src={item.image}\n        />\n        <h2\n          className=\"Place__restoraunt-name\"\n        >\n          {item.name}\n        </h2>\n        <p className=\"Place__restoraunt-type\">\n          {item.description}\n        </p>\n      </aside>\n      <div className=\"Place__order-body\">\n        <h3 className=\"Place__order-number-header\">\n          Номер вашего заказа\n        </h3>\n        <main className=\"Place__order-number\">\n          7\n        </main>\n        <p className=\"Place__order-number-header\">\n          Заказ будет готов через\n        </p>\n        <h3 className=\"Place__order-time\">\n          ~ 15 минут\n        </h3>\n      </div>\n      <footer className=\"Place__footer\">\n        <div \n          to=\"/orders\" \n          className=\"Place__order\"\n          onClick={() => {\n            setActiveOrder({ itemId });\n\n            setTimeout(() => {\n              history.push('/orders');\n            }, 0);\n          }}\n        >\n          Мои заказы\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nOrder.defaultProps = {\n  setActiveOrder: () => {},\n};\n\nexport default withRouter(Order);\n","import React, { useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport refresh from \"../img/refresh-button.svg\";\nimport \"./orders.css\";\n\nconst Orders = ({\n    order,\n    orderStatuses,\n    foodAreas,\n    setFinishedOrder,\n    setActiveOrder,\n}) => {\n    const activeOrders = useMemo(() => {\n        const activeOrdersList = Object.keys(orderStatuses)\n            .filter((shopId) => orderStatuses[shopId] === \"ACTIVE\")\n            .map((shopId) => shopId);\n\n        const result = [];\n        const activeOrdersSet = new Set(activeOrdersList);\n\n        foodAreas.forEach((area) => {\n            area.items.forEach((item) => {\n                if (activeOrdersSet.has(item.id)) {\n                    const data = {\n                        placeId: area.id,\n                        placeName: area.name,\n                        shopId: item.id,\n                        shopName: item.name,\n                        price: item.foods.reduce((result, food) => {\n                            if (food.id in order) {\n                                const {\n                                    item: { price },\n                                    count,\n                                } = order[food.id];\n\n                                return (\n                                    result + parseInt(price) * parseInt(count)\n                                );\n                            }\n\n                            return result;\n                        }, 0),\n                        link: `/order/${area.id}/${item.id}`,\n                    };\n\n                    result.push(data);\n                }\n            });\n        });\n\n        return result;\n    }, [order, orderStatuses, foodAreas]);\n\n    const finishedOrders = useMemo(() => {\n        const activeOrdersList = Object.keys(orderStatuses)\n            .filter((shopId) => orderStatuses[shopId] !== \"ACTIVE\")\n            .map((shopId) => shopId);\n\n        const result = [];\n        const activeOrdersSet = new Set(activeOrdersList);\n\n        foodAreas.forEach((area) => {\n            area.items.forEach((item) => {\n                if (activeOrdersSet.has(item.id)) {\n                    const data = {\n                        placeName: area.name,\n                        shopName: item.name,\n                        shopId: item.id,\n                        price: item.foods.reduce((result, food) => {\n                            if (food.id in order) {\n                                const {\n                                    item: { price },\n                                    count,\n                                } = order[food.id];\n\n                                return (\n                                    result + parseInt(price) * parseInt(count)\n                                );\n                            }\n\n                            return result;\n                        }, 0),\n                        link: `/order/${area.id}/${item.id}`,\n                    };\n\n                    result.push(data);\n                }\n            });\n        });\n\n        return result;\n    }, [order, orderStatuses, foodAreas]);\n\n    return (\n        <div className=\"Orders\">\n            <ul className=\"Orders__active-orders\">\n                {activeOrders.map((order) => (\n                    <li className=\"Orders__active-order\" key={order.link}>\n                        <div className=\"Orders__left\">\n                            <h3 className=\"Orders__header\">\n                                {order.placeName}\n                            </h3>\n                            <p className=\"Orders__shop-name\">\n                                {order.shopName}\n                            </p>\n                            <p className=\"Orders__price\">\n                                Сумма {order.price} - Оплачено\n                            </p>\n                        </div>\n                        <div className=\"Orders__time\">~ 15 М</div>\n                        <Link\n                            className=\"Orders__change\"\n                            to={`/place/${order.placeId}/${order.shopId}`}\n                        >\n                            Изм\n                        </Link>\n                        <button\n                            className=\"Orders__cancel\"\n                            onClick={() => {\n                                setFinishedOrder({ itemId: order.shopId });\n                            }}\n                        >\n                            Отм.\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            <ul className=\"Orders__finished-orders\">\n                {finishedOrders.map((order) => (\n                    <li className=\"Orders__finished-order\" key={order.link}>\n                        <div className=\"Orders__left\">\n                            <h3 className=\"Orders__header Orders__dark\">\n                                {order.placeName}\n                            </h3>\n                            <p className=\"Orders__shop-name Orders__pink\">\n                                {order.shopName}\n                            </p>\n                            <p className=\"Orders__price Orders__pink\">\n                                Сумма {order.price} - Оплачено\n                            </p>\n                        </div>\n                        <button\n                            className=\"Orders__repeat\"\n                            onClick={() => {\n                                setActiveOrder({ itemId: order.shopId });\n                            }}\n                        >\n                            <img\n                                className=\"Orders__refresh\"\n                                alt=\"repeat order\"\n                                src={refresh}\n                            />\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nOrders.defaultProps = {\n    setFinishedOrder: () => {},\n    setActiveOrder: () => {},\n};\n\nexport default Orders;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./panels/Home\";\nimport Place from \"./panels/Place\";\nimport Basket from \"./panels/Basket\";\nimport Order from \"./panels/Order\";\nimport Orders from \"./panels/Orders\";\n\nimport \"./panels/App.css\";\nimport kfc from \"./img/kfc.png\";\nimport burger from \"./img/burger.png\";\nimport mcdac from \"./img/mcdac.png\";\nimport sub from \"./img/sub.png\";\nimport OneTowar from \"./img/1.png\";\nimport TwoTowar from \"./img/2.png\";\nimport ThreeTowar from \"./img/3.png\";\nimport FourTowar from \"./img/4.png\";\n\nconst FOOD_AREAS = [\n    {\n        id: \"pizikiva-gallery\",\n        name: 'ТРЦ \"Им.Пыжикова\"',\n        items: [\n            {\n                id: \"kfc\",\n                name: \"KFC\",\n                link: \"/place/pizikiva-gallery/kfc\",\n                description: \"Сеть ресторанов быстрого питания\",\n                image: kfc,\n                foods: [\n                    {\n                        id: \"classic\",\n                        image: FourTowar,\n                        name: \"Классик\",\n                        price: 150,\n                    },\n                    {\n                        id: \"chips\",\n                        image: OneTowar,\n                        name: \"Картофель фри\",\n                        price: 50,\n                    },\n                ],\n            },\n            {\n                id: \"burger-king\",\n                name: \"Burger King\",\n                link: \"/place/pizikiva-gallery/burger-king\",\n                description: \"Сеть ресторанов быстрого питания\",\n                image: burger,\n                foods: [\n                    {\n                        id: \"OneTowar\",\n                        name: \"Товар № 1\",\n                        composition: \"Состав: по ГОСТу\",\n                        price: 630,\n                        image: OneTowar,\n                    },\n                    {\n                        id: \"TwoTowar\",\n                        name: \"Товар № 2\",\n                        composition: \"Состав: по ГОСТу\",\n                        price: 450,\n                        image: TwoTowar,\n                    },\n                    {\n                        id: \"ThreeTowar\",\n                        name: \"Товар № 3\",\n                        composition: \"Состав: по ГОСТу\",\n                        price: 800,\n                        image: ThreeTowar,\n                    },\n                    {\n                        id: \"FourthTowar\",\n                        name: \"Товар № 4\",\n                        composition: \"Состав по ГОСТу\",\n                        price: 600,\n                        image: FourTowar,\n                    },\n                ],\n            },\n            {\n                id: \"macdac\",\n                name: \"McDonal's\",\n                link: \"/place/pizikiva-gallery/macdac\",\n                description: \"Сеть ресторанов быстрого питания\",\n                image: mcdac,\n                foods: [\n                    {\n                        id: \"hamburger\",\n                        image: TwoTowar,\n                        name: \"Гамбургер\",\n                        price: 50,\n                    },\n                    {\n                        id: \"bigmac\",\n                        image: ThreeTowar,\n                        name: \"Биг мак\",\n                        price: 200,\n                    },\n                ],\n            },\n            {\n                id: \"subway\",\n                name: \"SubWay\",\n                link: \"/place/pizikiva-gallery/subway\",\n                image: sub,\n                description: \"Сеть ресторанов быстрого питания\",\n                foods: [\n                    {\n                        id: \"melt-sub\",\n                        image: ThreeTowar,\n                        name: \"Сабвей мелт\",\n                        price: 300,\n                    },\n                    {\n                        id: \"day-sub\",\n                        image: OneTowar,\n                        name: \"Саб дня\",\n                        price: 200,\n                    },\n                ],\n            },\n        ],\n    },\n];\n\nconst placesMap = FOOD_AREAS.reduce((result, area) => {\n    area.items.forEach((item) => {\n        result[item.link] = item;\n    });\n\n    return result;\n}, {});\n\nconst foodsMap = FOOD_AREAS.reduce((result, area) => {\n    area.items.forEach((item) => {\n        item.foods.forEach((food) => {\n            result[food.id] = food;\n        });\n    });\n\n    return result;\n}, {});\n\nconst App = () => {\n    const [orderStatuses, setOrderStatuses] = useState(\n        JSON.parse(localStorage.getItem(\"orderStatuses\") || \"null\") || {}\n    );\n    const [order, setOrder] = useState(\n        JSON.parse(localStorage.getItem(\"orders\") || \"null\") || {}\n    );\n\n    const [faster, setFaster] = useState(true);\n    const [time, setTime] = useState(\"\");\n\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Home foodAreas={FOOD_AREAS} order={order} />\n                </Route>\n                <Route path=\"/order/:areaId/:itemId\" exact>\n                    <Order\n                        foodAreas={FOOD_AREAS}\n                        order={order}\n                        setActiveOrder={({ itemId }) => {\n                            const nextStatuses = { ...orderStatuses };\n\n                            nextStatuses[itemId] = \"ACTIVE\";\n\n                            setOrderStatuses(nextStatuses);\n                            localStorage.setItem(\n                                \"orderStatuses\",\n                                JSON.stringify(nextStatuses)\n                            );\n                        }}\n                    />\n                </Route>\n                <Route path=\"/basket/:areaId/:itemId\" exact>\n                    <Basket\n                        foodAreas={FOOD_AREAS}\n                        order={order}\n                        faster={faster}\n                        setFaster={setFaster}\n                        time={time}\n                        setTime={setTime}\n                    />\n                </Route>\n                <Route path=\"/orders\" exact>\n                    <Orders\n                        order={order}\n                        orderStatuses={orderStatuses}\n                        foodAreas={FOOD_AREAS}\n                        setFinishedOrder={({ itemId }) => {\n                            const nextStatuses = { ...orderStatuses };\n\n                            nextStatuses[itemId] = \"CANCELED\";\n\n                            setOrderStatuses(nextStatuses);\n                            localStorage.setItem(\n                                \"orderStatuses\",\n                                JSON.stringify(nextStatuses)\n                            );\n                        }}\n                        setActiveOrder={({ itemId }) => {\n                            const nextStatuses = { ...orderStatuses };\n\n                            nextStatuses[itemId] = \"ACTIVE\";\n\n                            setOrderStatuses(nextStatuses);\n                            localStorage.setItem(\n                                \"orderStatuses\",\n                                JSON.stringify(nextStatuses)\n                            );\n                        }}\n                    />\n                </Route>\n                <Route\n                    path=\"/place/:area/:place\"\n                    render={(routeProps) => {\n                        return (\n                            <Place\n                                {...routeProps}\n                                item={placesMap[routeProps.location.pathname]}\n                                area={FOOD_AREAS[0]}\n                                order={order}\n                                onIncrementPosition={({\n                                    id,\n                                    itemId,\n                                    areaId,\n                                }) => {\n                                    const updatedOrder = { ...order };\n\n                                    console.log(id, itemId, areaId);\n\n                                    if (id in updatedOrder) {\n                                        updatedOrder[id].count++;\n                                    } else {\n                                        updatedOrder[id] = {\n                                            item: foodsMap[id],\n                                            count: 1,\n                                        };\n                                    }\n\n                                    let nextOrderStatuses = {\n                                        ...orderStatuses,\n                                    };\n\n                                    if (\n                                        Object.keys(nextOrderStatuses)\n                                            .length === 0\n                                    ) {\n                                        FOOD_AREAS.forEach((area) => {\n                                            area.items.forEach((item) => {\n                                                item.foods.forEach((food) => {\n                                                    if (food.id in order) {\n                                                        const status =\n                                                            item.id === itemId\n                                                                ? \"ACTIVE\"\n                                                                : \"DONE\";\n\n                                                        nextOrderStatuses[\n                                                            item.id\n                                                        ] = status;\n                                                    }\n                                                });\n                                            });\n                                        });\n                                    }\n\n                                    const serialized = JSON.stringify(\n                                        updatedOrder\n                                    );\n\n                                    localStorage.setItem(\"orders\", serialized);\n                                    localStorage.setItem(\n                                        \"orderStatuses\",\n                                        JSON.stringify(nextOrderStatuses)\n                                    );\n\n                                    setOrder(updatedOrder);\n                                    setOrderStatuses(nextOrderStatuses);\n                                }}\n                                onDecrementPosition={({\n                                    id,\n                                    itemId,\n                                    areaId,\n                                }) => {\n                                    const updatedOrder = { ...order };\n\n                                    if (id in updatedOrder) {\n                                        if (updatedOrder[id].count === 1) {\n                                            delete updatedOrder[id];\n                                        } else {\n                                            updatedOrder[id].count--;\n                                        }\n                                    }\n\n                                    let nextOrderStatuses = {\n                                        ...orderStatuses,\n                                    };\n\n                                    if (\n                                        Object.keys(nextOrderStatuses)\n                                            .length === 0\n                                    ) {\n                                        FOOD_AREAS.forEach((area) => {\n                                            area.items.forEach((item) => {\n                                                item.foods.forEach((food) => {\n                                                    if (food.id in order) {\n                                                        const status =\n                                                            item.id === itemId\n                                                                ? \"ACTIVE\"\n                                                                : \"DONE\";\n\n                                                        nextOrderStatuses[\n                                                            item.id\n                                                        ] = status;\n                                                    }\n                                                });\n                                            });\n                                        });\n                                    }\n\n                                    const serialized = JSON.stringify(\n                                        updatedOrder\n                                    );\n\n                                    localStorage.setItem(\"orders\", serialized);\n                                    localStorage.setItem(\n                                        \"orderStatuses\",\n                                        JSON.stringify(nextOrderStatuses)\n                                    );\n\n                                    setOrder(updatedOrder);\n                                    setOrderStatuses(nextOrderStatuses);\n                                }}\n                            />\n                        );\n                    }}\n                />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/edit.751f84c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.dfc54362.png\";","module.exports = __webpack_public_path__ + \"static/media/3.dbf82c38.png\";","module.exports = __webpack_public_path__ + \"static/media/2.20489759.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e671d539.png\";","module.exports = __webpack_public_path__ + \"static/media/check-symbol.06277842.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh-button.1198ed41.svg\";","module.exports = __webpack_public_path__ + \"static/media/kfc.4fd2ba47.png\";","module.exports = __webpack_public_path__ + \"static/media/burger.35bcd067.png\";","module.exports = __webpack_public_path__ + \"static/media/mcdac.60464810.png\";","module.exports = __webpack_public_path__ + \"static/media/sub.4eb05fdd.png\";"],"sourceRoot":""}